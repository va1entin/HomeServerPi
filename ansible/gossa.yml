---
- name: Gossa
  hosts: "pi4"
  vars:
    gossa_dir: "/home/{{ ansible_user_id }}/gossa"
    data_dir: "/mnt/data/gossa"
    vault_dir: "/mnt/data/vault"
    network_name: "caddy-internal"
  vars_files:
    - secrets.yml
  tasks:
    - name: "Ensure {{ data_dir }} dir exists"
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory

    - name: "Ensure {{ gossa_dir }} dir exists"
      ansible.builtin.file:
        path: "{{ gossa_dir }}"
        state: directory

    - name: "Render and copy Gossa entrypoint script"
      ansible.builtin.template:
        src: ../configs/gossa/start-gossa.sh.j2
        dest: "{{ gossa_dir }}/start-gossa.sh"
        mode: "0700"

    - name: "Copy Gossa executable"
      ansible.builtin.copy:
        src: "../configs/gossa/gossa-linux-arm64"
        dest: "{{ gossa_dir }}/gossa-linux-arm64"
        mode: "0755"

    - name: "Copy Gossa Dockerfile"
      ansible.builtin.copy:
        src: "../configs/gossa/Dockerfile"
        dest: "{{ gossa_dir }}/Dockerfile"

    - name: "Build Gossa container image"
      containers.podman.podman_image:
        name: "gossa"
        # source: build
        path: "{{ gossa_dir }}"
        # pull: true
        force: true
        tag: "latest"
        state: present

    - name: Add proxy container network
      containers.podman.podman_network:
        name: "{{ network_name }}"
        internal: true

    - name: "Start Gossa container"
      containers.podman.podman_container:
        name: gossa
        image: "localhost/gossa:latest"
        detach: true
        restart_policy: always
        pull: never
        volumes:
          - "/etc/localtime:/etc/localtime:ro"
          - "{{ data_dir }}:/data"
          - "{{ vault_dir }}:/vault"
        network:
          - "{{ network_name }}"
        state: started